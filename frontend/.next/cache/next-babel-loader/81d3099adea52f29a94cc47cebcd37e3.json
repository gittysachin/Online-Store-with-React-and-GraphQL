{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachi\\\\OneDrive\\\\Desktop\\\\Codes\\\\NODE JS\\\\WESBOS\\\\Advanced-React-Sachin\\\\sick-fits\\\\frontend\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App, { Container } from 'next/app';\nimport Page from '../components/Page';\nimport { ApolloProvider } from 'react-apollo';\nimport withData from '../lib/withData';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    } // this exposes the query to the user \n\n\n    pageProps.query = ctx.query;\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      apollo,\n      pageProps\n    } = this.props;\n    return __jsx(ApolloProvider, {\n      client: apollo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default withData(MyApp);","map":{"version":3,"sources":["C:/Users/sachi/OneDrive/Desktop/Codes/NODE JS/WESBOS/Advanced-React-Sachin/sick-fits/frontend/pages/_app.js"],"names":["App","Container","Page","ApolloProvider","withData","MyApp","getInitialProps","Component","ctx","pageProps","query","render","apollo","props"],"mappings":";;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,KAAN,SAAoBL,GAApB,CAAwB;AACpB,eAAaM,eAAb,CAA6B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA7B,EAA+C;AAC3C,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAGF,SAAS,CAACD,eAAb,EAA8B;AAC1BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACH,KAJ0C,CAK3C;;;AACAC,IAAAA,SAAS,CAACC,KAAV,GAAkBF,GAAG,CAACE,KAAtB;AACA,WAAO;AAAED,MAAAA;AAAF,KAAP;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEJ,MAAAA,SAAF;AAAaK,MAAAA,MAAb;AAAqBH,MAAAA;AAArB,QAAmC,KAAKI,KAA9C;AAEA,WACI,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ,CADJ;AAOH;;AApBmB;;AAuBxB,eAAeL,QAAQ,CAACC,KAAD,CAAvB","sourcesContent":["import App, { Container } from 'next/app';\r\nimport Page from '../components/Page';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport withData from '../lib/withData';\r\n\r\nclass MyApp extends App {\r\n    static async getInitialProps({Component, ctx}) {\r\n        let pageProps = {};\r\n        if(Component.getInitialProps) {\r\n            pageProps = await Component.getInitialProps(ctx);\r\n        }\r\n        // this exposes the query to the user \r\n        pageProps.query = ctx.query;\r\n        return { pageProps };\r\n    }\r\n    render() {\r\n        const { Component, apollo, pageProps } = this.props;\r\n\r\n        return(\r\n            <ApolloProvider client={apollo}>\r\n                <Page>\r\n                    <Component {...pageProps} />\r\n                </Page>\r\n            </ApolloProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withData(MyApp);"]},"metadata":{},"sourceType":"module"}